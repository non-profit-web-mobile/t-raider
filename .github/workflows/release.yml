name: release

on:
  push:
    branches:
      - main

jobs:
  push-docker:
    name: Push docker
    runs-on: ubuntu-latest
    timeout-minutes: 10

    env:
      registry: cr.yandex/crpms6iaa8rs3mvdhl1a
      services_image: t_raider_services
      worker_image: t_raider_worker
      migrator_image: t_raider_migrator
      bot_image: t_raider_bot
      admin_bot_image: t_raider_admin_bot

      DOCKER_BUILDKIT: 1

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Get version
        id: version
        run: |
          if git describe --tags --exact-match 2>/dev/null; then
            VERSION=$(git describe --tags --exact-match)
          else
            VERSION=$(git rev-parse --short HEAD)
          fi
          echo "version=$VERSION" >> $GITHUB_OUTPUT
          echo "Using version: $VERSION"

      - name: Build docker images
        run: |
          docker build . --rm --tag ${{ env.registry }}/${{ env.services_image }}:latest --tag ${{ env.registry }}/${{ env.services_image }}:${{ steps.version.outputs.version }} --target services
          docker build . --rm --tag ${{ env.registry }}/${{ env.worker_image }}:latest --tag ${{ env.registry }}/${{ env.worker_image }}:${{ steps.version.outputs.version }} --target worker
          docker build . --rm --tag ${{ env.registry }}/${{ env.migrator_image }}:latest --tag ${{ env.registry }}/${{ env.migrator_image }}:${{ steps.version.outputs.version }} --target migrator
          docker build -f ./bot/Dockerfile ./bot --rm --tag ${{ env.registry }}/${{ env.bot_image }}:latest --tag ${{ env.registry }}/${{ env.bot_image }}:${{ steps.version.outputs.version }}
          docker build -f ./admin-bot/Dockerfile ./admin-bot --rm --tag ${{ env.registry }}/${{ env.admin_bot_image }}:latest --tag ${{ env.registry }}/${{ env.admin_bot_image }}:${{ steps.version.outputs.version }}

      - name: Login in docker registry
        run: echo '${{ secrets.YANDEX_AUTHORIZED_KEY }}' | docker login --username json_key --password-stdin cr.yandex

      - name: Push docker images
        run: |
          docker push ${{ env.registry }}/${{ env.services_image }}:latest
          docker push ${{ env.registry }}/${{ env.services_image }}:${{ steps.version.outputs.version }}
          docker push ${{ env.registry }}/${{ env.worker_image }}:latest
          docker push ${{ env.registry }}/${{ env.worker_image }}:${{ steps.version.outputs.version }}
          docker push ${{ env.registry }}/${{ env.migrator_image }}:latest
          docker push ${{ env.registry }}/${{ env.migrator_image }}:${{ steps.version.outputs.version }}
          docker push ${{ env.registry }}/${{ env.bot_image }}:latest
          docker push ${{ env.registry }}/${{ env.bot_image }}:${{ steps.version.outputs.version }}
          docker push ${{ env.registry }}/${{ env.admin_bot_image }}:latest
          docker push ${{ env.registry }}/${{ env.admin_bot_image }}:${{ steps.version.outputs.version }}
