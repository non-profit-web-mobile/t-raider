version: '3.8'

services:
  postgres:
    image: postgres:15-alpine
    container_name: postgres
    ports:
      - 5432:5432
    environment:
      POSTGRES_DB: t-raider-database
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: password
      PGDATA: /var/lib/postgresql/data/pgdata
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U admin -d t-raider-database"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s
    restart: unless-stopped
    deploy:
      resources:
        limits:
          cpus: '1'
          memory: 2G

  migrator:
    build: 
      context: .
      dockerfile: Dockerfile
      target: migrator
    container_name: migrator
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      ConnectionStrings__TRaiderDatabase: "User ID=admin;Password=password;Host=postgres;Port=5432;Database=t-raider-database;"
    restart: on-failure

  kafka:
    image: bitnami/kafka:latest
    container_name: kafka
    ports:
      - 9092:9092
      - 9094:9094
    environment:
      KAFKA_CFG_NODE_ID: 1
      KAFKA_CFG_PROCESS_ROLES: broker,controller
      KAFKA_CFG_CONTROLLER_QUORUM_VOTERS: 1@kafka:9093
      KAFKA_CFG_LISTENERS: PLAINTEXT://:9092,CONTROLLER://:9093,EXTERNAL://:9094
      KAFKA_CFG_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,EXTERNAL://localhost:9094
      KAFKA_CFG_CONTROLLER_LISTENER_NAMES: CONTROLLER
      KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,CONTROLLER:PLAINTEXT,EXTERNAL:PLAINTEXT
      KAFKA_CFG_LOG_DIRS: /bitnami/kafka/data
      ALLOW_PLAINTEXT_LISTENER: yes
    healthcheck:
      test: ["CMD", "kafka-broker-api-versions.sh", "--bootstrap-server", "PLAINTEXT://127.0.0.1:9092"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s
    restart: unless-stopped

  kafka-ui:
    image: provectuslabs/kafka-ui:latest
    container_name: kafka-ui
    ports:
      - 8080:8080
    environment:
      KAFKA_CLUSTERS_0_NAME: local
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: kafka:9092
    depends_on:
      kafka:
        condition: service_healthy
    restart: unless-stopped

  # telegram-bot:
  #   build:
  #     context: ./bot
  #     dockerfile: Dockerfile
  #   container_name: telegram-bot
  #   depends_on:
  #     postgres:
  #       condition: service_healthy
  #     kafka:
  #       condition: service_healthy
  #   environment:
  #     BOT_TOKEN: your_bot_token_here
  #     WEBHOOK_URL: https://your-domain.com
      
  #     PORT: 3000
  #     NODE_ENV: development
      
  #     DB_HOST: postgres
  #     DB_PORT: 5432
  #     DB_NAME: t-raider-database
  #     DB_USER: admin
  #     DB_PASSWORD: password
      
  #     KAFKA_BROKERS: kafka:9092
  #     KAFKA_CLIENT_ID: telegram-bot
      
  #     LOG_LEVEL: info
  #   volumes:
  #     - ./bot/logs:/app/logs
  #   restart: unless-stopped
  #   deploy:
  #     resources:
  #       limits:
  #         cpus: '0.5'
  #         memory: 512M

volumes:
  postgres_data:
