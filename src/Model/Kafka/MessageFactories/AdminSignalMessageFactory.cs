using Model.Domain;
using Model.Kafka.Messages;
using Newtonsoft.Json;

namespace Model.Kafka.MessageFactories;

public class AdminSignalMessageFactory : IAdminSignalMessageFactory
{
    public AdminSignalMessage Create(NewsProcessorSuccessResult newsProcessorSuccessResult)
    {
        var processingDurationTime = newsProcessorSuccessResult.ProcessingDurationTime;
        var formattedProcessingDurationTime =
            $"{processingDurationTime.Hours:D2}:" +
            $"{processingDurationTime.Minutes:D2}:" +
            $"{processingDurationTime.Seconds:D2}." +
            $"{processingDurationTime.Milliseconds / 10:D2}";

        var json = JsonConvert.SerializeObject(newsProcessorSuccessResult.NewsAnalyze, Formatting.Indented);
        
        var message =
            $"üöÄ –£—Å–ø–µ—à–Ω–æ –æ–±—Ä–∞–±–æ—Ç–∞–Ω–∞ –Ω–æ–≤–æ—Å—Ç—å \"{newsProcessorSuccessResult.NewsAnalyze.Brief}\" –∏–∑ –∏—Å—Ç–æ—á–Ω–∏–∫–∞ {newsProcessorSuccessResult.NewsUrl}\r\n" +
            $"–ü–æ –Ω–æ–≤–æ—Å—Ç–∏ —Å—Ñ–æ—Ä–º—É–ª–∏—Ä–æ–≤–∞–Ω–æ {newsProcessorSuccessResult.NewsAnalyze.Hypotheses.Count} –≥–∏–ø–æ—Ç–µ–∑\r\n" +
            $"–ü–æ—Ç—Ä–∞—á–µ–Ω–æ —Ç–æ–∫–µ–Ω–æ–≤ {newsProcessorSuccessResult.UsageTotalTokenCount}, –≤—Ä–µ–º—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ {formattedProcessingDurationTime}\r\n" +
            $"{DateTime.UtcNow:yyyy-MM-dd HH:mm:ss (UTC)}\r\n" +
            $"–û—Ç–≤–µ—Ç openai:\r\n" +
            $"```JSON{json}```";

        return new AdminSignalMessage(message);
    }

    public AdminSignalMessage Create(NewsProcessorErrorResult newsProcessorErrorResult)
    {
        var trimmedErrorMessage = newsProcessorErrorResult.ErrorMessage.Length > 300
            ? newsProcessorErrorResult.ErrorMessage + "..."
            : newsProcessorErrorResult.ErrorMessage;

        return new AdminSignalMessage(
            $"üíî –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ –Ω–æ–≤–æ—Å—Ç–∏ –∏–∑ –∏—Å—Ç–æ—á–Ω–∏–∫–∞ {newsProcessorErrorResult.NewsUrl}\r\n" +
            $"üìä –î–µ—Ç–∞–ª–∏ –Ω–∏–∂–µ:\r\n" +
            $"{trimmedErrorMessage}" +
            $"{DateTime.UtcNow:yyyy-MM-dd HH:mm:ss (UTC)}");
    }

    public AdminSignalMessage Create(MessageClick messageClick)
    {
        return new AdminSignalMessage(
            $"üëÄ –ü–æ–ª—É—á–∏–ª–∏ –∫–ª–∏–∫ \"{messageClick.ClickType}\" –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –¥–ª—è –∏–¥–µ–∏ \"{messageClick.Tactics}\" –ø–æ —Å—Å—ã–ª–∫–µ {messageClick.Link}\r\n" +
            $"{DateTime.UtcNow:yyyy-MM-dd HH:mm:ss (UTC)}");
    }
}